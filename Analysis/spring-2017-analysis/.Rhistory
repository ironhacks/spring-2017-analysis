pca <- predict(my.prc, newdata=motivation)
pca
dim(motivation)
View(motivation)
print(my.prc)
summary(motivation)
head(my.prc$x)
pca_frame <- as.data.frame(pca)
pca_frame
allData <- cbind(pca_frame[1], id = survey$hack_id)
allData
allData_abs_PC1 <- abs(allData)
allData_abs_PC1
anova_1 <- as.data.frame(allData_abs_PC1)
anova_1
ANOVA_RESULTS_1 <- aov(PC1 ~ id, data=anova_1)
summary(ANOVA_RESULTS_1)
allData_abs_PC1$performance <- ifelse(allData_abs_PC1$id==1, 1,
ifelse(allData_abs_PC1$id==2, 0,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
allData_abs_PC1$solution <- ifelse(allData_abs_PC1$id==1, 0,
ifelse(allData_abs_PC1$id==2, 1,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
res.ftest <- var.test(PC1 ~ performance, data = allData_abs_PC1)
res.ftest
res <- t.test(PC1 ~ performance, data = allData_abs_PC1, var.equal = TRUE)
res
allData_PC2 <- cbind(pca_frame[2], id = survey$hack_id)
allData_PC2
allData_abs_PC2 <- abs(allData_PC2)
allData_abs_PC2
anova_2 <- as.data.frame(allData_abs_PC2)
anova_2
ANOVA_RESULTS_2 <- aov(PC2 ~ id, data=anova_2)
summary(ANOVA_RESULTS_2)
allData_abs_PC2$performance <- ifelse(allData_abs_PC2$id==1, 1,
ifelse(allData_abs_PC2$id==2, 0,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
allData_abs_PC2$solution <- ifelse(allData_abs_PC2$id==1, 0,
ifelse(allData_abs_PC2$id==2, 1,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
res.ftest <- var.test(PC2 ~ performance, data = allData_abs_PC2)
res.ftest
res <- t.test(PC2 ~ performance, data = allData_abs_PC2, var.equal = TRUE)
res
# Shapiro-Wilk normality test for Men's weights
with(my_data, shapiro.test(PC2[performance  == 1]))
# Shapiro-Wilk normality test for Men's weights
with(allData_abs_PC2, shapiro.test(PC2[performance  == 1]))
# Shapiro-Wilk normality test for Men's weights
with(allData_abs_PC2, shapiro.test(PC2[solution  == 1]))
# Loading required package: psych
require(psych)
# Loading required package: GPArotation
require(GPArotation)
library(lattice)
url <- "/Users/jialincheoh/Desktop/survey_final_read.csv"
survey <- read.csv(url, header=TRUE)
survey
names(survey)[1:13] <- c("monetary_compensation", "excellent_programmer", "internship",
"introduce_ideas", "get_in_touch", "known_creativity", "improve_skills",
"test_capability", "enjoy_problems", "keep_up", "dissatisfaction", "curious", "pass_class")
survey
# Extract all 13 survey items with motivation construct
motivation <- survey[c(1:13)]
motivation
lowerCor(motivation)
library(correlation)
correlation::correlation(motivation,
include_factors = TRUE, method = "auto"
)
# Do the PCA with singular value decomposition of the (centered and possibly scaled) data matrix
my.prc = prcomp(motivation, center=TRUE, scale=TRUE)
screeplot(my.prc, main="Scree Plot", xlab="Components")
screeplot(my.prc, main="Scree Plot", type="line" )
my.prc
# Kaiser criterion to determine the number of principle components to keep
my.prc$sdev ^ 2
screeplot(my.prc, main="Scree Plot", xlab="Components")
# DotPlot PC1
load    <- my.prc$rotation
sorted.loadings <- load[order(load[, 1]), 1]
myTitle <- "Loadings Plot for PC1"
myXlab  <- "Variable Loadings"
dotplot(sorted.loadings, main=myTitle, xlab=myXlab, cex=1.5, col="red")
summary(my.prc)
# DotPlot PC2
sorted.loadings <- load[order(load[, 2]), 2]
myTitle <- "Loadings Plot for PC2"
myXlab  <- "Variable Loadings"
dotplot(sorted.loadings, main=myTitle, xlab=myXlab, cex=1.5, col="red")
# Now draw the BiPlot
biplot(my.prc, cex=c(1, 0.7))
my.prc$rotation[, 1:2]
options(max.print=1000000)
project.b = predict(my.prc, motivation)
project.b
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:6])
my.var
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:2])
my.var
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:3])
my.var
head(my.prc$x)
summary(my.prc)
pca <- predict(my.prc, newdata=motivation)
pca
dim(motivation)
View(motivation)
print(my.prc)
summary(motivation)
head(my.prc$x)
pca_frame <- as.data.frame(pca)
pca_frame
allData <- cbind(pca_frame[1], id = survey$hack_id)
allData
allData_abs_PC1 <- abs(allData)
allData_abs_PC1
anova_1 <- as.data.frame(allData_abs_PC1)
anova_1
ANOVA_RESULTS_1 <- aov(PC1 ~ id, data=anova_1)
summary(ANOVA_RESULTS_1)
allData_abs_PC1$performance <- ifelse(allData_abs_PC1$id==1, 1,
ifelse(allData_abs_PC1$id==2, 0,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
allData_abs_PC1$solution <- ifelse(allData_abs_PC1$id==1, 0,
ifelse(allData_abs_PC1$id==2, 1,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
res.ftest <- var.test(PC1 ~ performance, data = allData_abs_PC1)
res.ftest
res <- t.test(PC1 ~ performance, data = allData_abs_PC1, var.equal = TRUE)
res
allData_PC2 <- cbind(pca_frame[2], id = survey$hack_id)
allData_PC2
allData_abs_PC2 <- abs(allData_PC2)
allData_abs_PC2
anova_2 <- as.data.frame(allData_abs_PC2)
anova_2
ANOVA_RESULTS_2 <- aov(PC2 ~ id, data=anova_2)
summary(ANOVA_RESULTS_2)
allData_abs_PC2$performance <- ifelse(allData_abs_PC2$id==1, 1,
ifelse(allData_abs_PC2$id==2, 0,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
allData_abs_PC2$solution <- ifelse(allData_abs_PC2$id==1, 0,
ifelse(allData_abs_PC2$id==2, 1,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
# Shapiro-Wilk normality test for Men's weights
with(allData_abs_PC2, shapiro.test(PC2[performance  == 1]))
# Shapiro-Wilk normality test for Men's weights
with(allData_abs_PC2, shapiro.test(PC2[solution  == 1]))
res.ftest <- var.test(PC2 ~ performance, data = allData_abs_PC2)
res.ftest
res <- t.test(PC2 ~ performance, data = allData_abs_PC2, var.equal = TRUE)
res
# Loading required package: psych
require(psych)
# Loading required package: GPArotation
require(GPArotation)
library(lattice)
url <- "/Users/jialincheoh/Desktop/survey_final_read.csv"
survey <- read.csv(url, header=TRUE)
survey
names(survey)[1:13] <- c("monetary_compensation", "excellent_programmer", "internship",
"introduce_ideas", "get_in_touch", "known_creativity", "improve_skills",
"test_capability", "enjoy_problems", "keep_up", "dissatisfaction", "curious", "pass_class")
survey
# Extract all 13 survey items with motivation construct
motivation <- survey[c(1:13)]
motivation
lowerCor(motivation)
library(correlation)
correlation::correlation(motivation,
include_factors = TRUE, method = "auto"
)
# Do the PCA with singular value decomposition of the (centered and possibly scaled) data matrix
my.prc = prcomp(motivation, center=TRUE, scale=TRUE)
screeplot(my.prc, main="Scree Plot", xlab="Components")
screeplot(my.prc, main="Scree Plot", type="line" )
my.prc
# Kaiser criterion to determine the number of principle components to keep
my.prc$sdev ^ 2
screeplot(my.prc, main="Scree Plot", xlab="Components")
# DotPlot PC1
load    <- my.prc$rotation
sorted.loadings <- load[order(load[, 1]), 1]
myTitle <- "Loadings Plot for PC1"
myXlab  <- "Variable Loadings"
dotplot(sorted.loadings, main=myTitle, xlab=myXlab, cex=1.5, col="red")
summary(my.prc)
# DotPlot PC2
sorted.loadings <- load[order(load[, 2]), 2]
myTitle <- "Loadings Plot for PC2"
myXlab  <- "Variable Loadings"
dotplot(sorted.loadings, main=myTitle, xlab=myXlab, cex=1.5, col="red")
# Now draw the BiPlot
biplot(my.prc, cex=c(1, 0.7))
my.prc$rotation[, 1:2]
options(max.print=1000000)
project.b = predict(my.prc, motivation)
project.b
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:6])
my.var
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:2])
my.var
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:3])
my.var
head(my.prc$x)
summary(my.prc)
pca <- predict(my.prc, newdata=motivation)
pca
dim(motivation)
View(motivation)
print(my.prc)
summary(motivation)
head(my.prc$x)
pca_frame <- as.data.frame(pca)
pca_frame
allData <- cbind(pca_frame[1], id = survey$hack_id)
allData
allData_abs_PC1 <- abs(allData)
allData_abs_PC1
anova_1 <- as.data.frame(allData_abs_PC1)
anova_1
ANOVA_RESULTS_1 <- aov(PC1 ~ id, data=anova_1)
summary(ANOVA_RESULTS_1)
allData_abs_PC1$performance <- ifelse(allData_abs_PC1$id==1, 1,
ifelse(allData_abs_PC1$id==2, 0,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
allData_abs_PC1$solution <- ifelse(allData_abs_PC1$id==1, 0,
ifelse(allData_abs_PC1$id==2, 1,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
res.ftest <- var.test(PC1 ~ performance, data = allData_abs_PC1)
res.ftest
res <- t.test(PC1 ~ performance, data = allData_abs_PC1, var.equal = TRUE)
res
allData_PC2 <- cbind(pca_frame[2], id = survey$hack_id)
allData_PC2
allData_abs_PC2 <- abs(allData_PC2)
allData_abs_PC2
anova_2 <- as.data.frame(allData_abs_PC2)
anova_2
ANOVA_RESULTS_2 <- aov(PC2 ~ id, data=anova_2)
summary(ANOVA_RESULTS_2)
allData_abs_PC2$performance <- ifelse(allData_abs_PC2$id==1, 1,
ifelse(allData_abs_PC2$id==2, 0,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
allData_abs_PC2$solution <- ifelse(allData_abs_PC2$id==1, 0,
ifelse(allData_abs_PC2$id==2, 1,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
# Shapiro-Wilk normality test for Men's weights
with(allData_abs_PC2, shapiro.test(PC2[performance  == 1]))
# Shapiro-Wilk normality test for Men's weights
with(allData_abs_PC2, shapiro.test(PC2[solution  == 1]))
res.ftest <- var.test(PC2 ~ performance, data = allData_abs_PC2)
res.ftest
res <- t.test(PC2 ~ performance, data = allData_abs_PC2, var.equal = TRUE)
res
res.ftest <- var.test(PC2 ~ solution, data = allData_abs_PC2)
res.ftest
res <- t.test(PC2 ~ solution, data = allData_abs_PC2, var.equal = TRUE)
res
res <- t.test(PC2 ~ solution, data = allData_abs_PC2, var.equal = TRUE)
res
t.test(PC1, performance, alternative = "two.sided", var.equal = FALSE)
res.ftest <- var.test(PC1 ~ performance, data = allData_abs_PC1)
res.ftest
head(my.var$x)
head(my.prc$x)
res <- t.test(PC1 ~ solution, data = allData_abs_PC1, var.equal = TRUE)
res
# Loading required package: psych
require(psych)
# Loading required package: GPArotation
require(GPArotation)
library(lattice)
url <- "/Users/jialincheoh/Desktop/survey_final_read.csv"
survey <- read.csv(url, header=TRUE)
survey
names(survey)[1:13] <- c("monetary_compensation", "excellent_programmer", "internship",
"introduce_ideas", "get_in_touch", "known_creativity", "improve_skills",
"test_capability", "enjoy_problems", "keep_up", "dissatisfaction", "curious", "pass_class")
survey
# Extract all 13 survey items with motivation construct
motivation <- survey[c(1:13)]
motivation
lowerCor(motivation)
library(correlation)
correlation::correlation(motivation,
include_factors = TRUE, method = "auto"
)
# Do the PCA with singular value decomposition of the (centered and possibly scaled) data matrix
my.prc = prcomp(motivation, center=TRUE, scale=TRUE)
screeplot(my.prc, main="Scree Plot", xlab="Components")
screeplot(my.prc, main="Scree Plot", type="line" )
my.prc
# Kaiser criterion to determine the number of principle components to keep
my.prc$sdev ^ 2
screeplot(my.prc, main="Scree Plot", xlab="Components")
# DotPlot PC1
load    <- my.prc$rotation
sorted.loadings <- load[order(load[, 1]), 1]
myTitle <- "Loadings Plot for PC1"
myXlab  <- "Variable Loadings"
dotplot(sorted.loadings, main=myTitle, xlab=myXlab, cex=1.5, col="red")
summary(my.prc)
# DotPlot PC2
sorted.loadings <- load[order(load[, 2]), 2]
myTitle <- "Loadings Plot for PC2"
myXlab  <- "Variable Loadings"
dotplot(sorted.loadings, main=myTitle, xlab=myXlab, cex=1.5, col="red")
# Now draw the BiPlot
biplot(my.prc, cex=c(1, 0.7))
my.prc$rotation[, 1:2]
options(max.print=1000000)
project.b = predict(my.prc, motivation)
project.b
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:6])
my.var
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:2])
my.var
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:3])
my.var
head(my.prc$x)
summary(my.prc)
pca <- predict(my.prc, newdata=motivation)
pca
print(my.prc)
summary(motivation)
head(my.prc$x)
pca_frame <- as.data.frame(pca)
pca_frame
allData <- cbind(pca_frame[1], id = survey$hack_id)
allData
allData_abs_PC1 <- abs(allData)
allData_abs_PC1
anova_1 <- as.data.frame(allData_abs_PC1)
anova_1
ANOVA_RESULTS_1 <- aov(PC1 ~ id, data=anova_1)
summary(ANOVA_RESULTS_1)
allData_abs_PC1$performance <- ifelse(allData_abs_PC1$id==1, 1,
ifelse(allData_abs_PC1$id==2, 0,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
allData_abs_PC1$solution <- ifelse(allData_abs_PC1$id==1, 0,
ifelse(allData_abs_PC1$id==2, 1,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
res <- t.test(PC1 ~ performance, data = allData_abs_PC1, var.equal = TRUE)
res
res <- t.test(PC1 ~ solution, data = allData_abs_PC1, var.equal = TRUE)
res
allData_PC2 <- cbind(pca_frame[2], id = survey$hack_id)
allData_PC2
allData_abs_PC2 <- abs(allData_PC2)
allData_abs_PC2
anova_2 <- as.data.frame(allData_abs_PC2)
anova_2
ANOVA_RESULTS_2 <- aov(PC2 ~ id, data=anova_2)
summary(ANOVA_RESULTS_2)
allData_abs_PC2$solution <- ifelse(allData_abs_PC2$id==1, 0,
ifelse(allData_abs_PC2$id==2, 1,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
res.ftest <- var.test(PC2 ~ performance, data = allData_abs_PC2)
# Loading required package: psych
require(psych)
# Loading required package: GPArotation
require(GPArotation)
library(lattice)
url <- "/Users/jialincheoh/Desktop/survey_final_read.csv"
survey <- read.csv(url, header=TRUE)
survey
names(survey)[1:13] <- c("monetary_compensation", "excellent_programmer", "internship",
"introduce_ideas", "get_in_touch", "known_creativity", "improve_skills",
"test_capability", "enjoy_problems", "keep_up", "dissatisfaction", "curious", "pass_class")
survey
# Extract all 13 survey items with motivation construct
motivation <- survey[c(1:13)]
motivation
lowerCor(motivation)
library(correlation)
correlation::correlation(motivation,
include_factors = TRUE, method = "auto"
)
# Do the PCA with singular value decomposition of the (centered and possibly scaled) data matrix
my.prc = prcomp(motivation, center=TRUE, scale=TRUE)
screeplot(my.prc, main="Scree Plot", xlab="Components")
screeplot(my.prc, main="Scree Plot", type="line" )
my.prc
# Kaiser criterion to determine the number of principle components to keep
my.prc$sdev ^ 2
screeplot(my.prc, main="Scree Plot", xlab="Components")
# DotPlot PC1
load    <- my.prc$rotation
sorted.loadings <- load[order(load[, 1]), 1]
myTitle <- "Loadings Plot for PC1"
myXlab  <- "Variable Loadings"
dotplot(sorted.loadings, main=myTitle, xlab=myXlab, cex=1.5, col="red")
summary(my.prc)
# DotPlot PC2
sorted.loadings <- load[order(load[, 2]), 2]
myTitle <- "Loadings Plot for PC2"
myXlab  <- "Variable Loadings"
dotplot(sorted.loadings, main=myTitle, xlab=myXlab, cex=1.5, col="red")
# Now draw the BiPlot
biplot(my.prc, cex=c(1, 0.7))
my.prc$rotation[, 1:2]
options(max.print=1000000)
project.b = predict(my.prc, motivation)
project.b
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:6])
my.var
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:2])
my.var
# Apply the Varimax Rotation
my.var <- varimax(my.prc$rotation[, 1:3])
my.var
head(my.prc$x)
summary(my.prc)
pca <- predict(my.prc, newdata=motivation)
pca
print(my.prc)
summary(motivation)
head(my.prc$x)
pca_frame <- as.data.frame(pca)
pca_frame
allData <- cbind(pca_frame[1], id = survey$hack_id)
allData
allData_abs_PC1 <- abs(allData)
allData_abs_PC1
anova_1 <- as.data.frame(allData_abs_PC1)
anova_1
ANOVA_RESULTS_1 <- aov(PC1 ~ id, data=anova_1)
summary(ANOVA_RESULTS_1)
allData_abs_PC1$performance <- ifelse(allData_abs_PC1$id==1, 1,
ifelse(allData_abs_PC1$id==2, 0,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
allData_abs_PC1$solution <- ifelse(allData_abs_PC1$id==1, 0,
ifelse(allData_abs_PC1$id==2, 1,
ifelse(allData_abs_PC1$id==0, 0,
ifelse(allData_abs_PC1$id==3, 1, NA))))
allData_abs_PC1
res <- t.test(PC1 ~ performance, data = allData_abs_PC1, var.equal = TRUE)
res
res <- t.test(PC1 ~ solution, data = allData_abs_PC1, var.equal = TRUE)
res
allData_PC2 <- cbind(pca_frame[2], id = survey$hack_id)
allData_PC2
allData_abs_PC2 <- abs(allData_PC2)
allData_abs_PC2
anova_2 <- as.data.frame(allData_abs_PC2)
anova_2
ANOVA_RESULTS_2 <- aov(PC2 ~ id, data=anova_2)
summary(ANOVA_RESULTS_2)
allData_abs_PC2$performance <- ifelse(allData_abs_PC2$id==1, 1,
ifelse(allData_abs_PC2$id==2, 0,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
allData_abs_PC2$solution <- ifelse(allData_abs_PC2$id==1, 0,
ifelse(allData_abs_PC2$id==2, 1,
ifelse(allData_abs_PC2$id==0, 0,
ifelse(allData_abs_PC2$id==3, 1, NA))))
allData_abs_PC2
res.ftest <- var.test(PC2 ~ performance, data = allData_abs_PC2)
res.ftest
res <- t.test(PC2 ~ performance, data = allData_abs_PC2, var.equal = TRUE)
res
res.ftest <- var.test(PC2 ~ solution, data = allData_abs_PC2)
res.ftest
res <- t.test(PC2 ~ solution, data = allData_abs_PC2, var.equal = TRUE)
res
